package todo

import (
	"encoding/json"
	"net/http"
	"net/http/httptest"
	"os"
	"path/filepath"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestTodoIntegration(t *testing.T) {
	// Setup
	tmpDir, err := os.MkdirTemp("", "todos-integration-*")
	require.NoError(t, err)
	defer os.RemoveAll(tmpDir)

	// Create test files
	testFiles := []string{"test1.md", "test2.md"}
	for _, fname := range testFiles {
		err := os.WriteFile(
			filepath.Join(tmpDir, fname),
			[]byte("test content"),
			0644,
		)
		require.NoError(t, err)
	}

	// Initialize service and handler
	service := NewTodoService(tmpDir)
	handler := NewTodoHandler(service)

	// Create test server
	server := httptest.NewServer(http.HandlerFunc(handler.ListTodos))
	defer server.Close()

	// Make request
	resp, err := http.Get(server.URL)
	require.NoError(t, err)
	defer resp.Body.Close()

	// Assert response
	assert.Equal(t, http.StatusOK, resp.StatusCode)

	var response TodoListResponse
	err = json.NewDecoder(resp.Body).Decode(&response)
	require.NoError(t, err)

	assert.Len(t, response.Todos, 2)
	assert.Contains(t, response.Todos, "test1.md")
	assert.Contains(t, response.Todos, "test2.md")
}
